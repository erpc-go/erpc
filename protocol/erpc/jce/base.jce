module base{   
    ////////////////////////////////////////////////////////////////
    // 定义协议的版本号
    const short ERPC_VERSION   = 0x01;
    const short TUP_VERSION    = 0x03;
    const short XML_VERSION    = 0x04;
    const short JSON_VERSION   = 0x05;

    ////////////////////////////////////////////////////////////////
    // 定义消息的类型

    // 普通调用
    const byte ERPC_NORMAL  = 0x00;

    // 单向调用
    const byte ERPC_ONEWAY  = 0x01;

    ////////////////////////////////////////////////////////////////
    // ERPC定义的返回码

    const int ERPC_SERVER_SUCCESS       = 0;       //服务器端处理成功
    const int ERPC_SERVER_DECODEERR     = -1;      //服务器端解码异常
    const int ERPC_SERVER_ENCODEERR     = -2;      //服务器端编码异常
    const int ERPC_SERVER_NOFUNCERR     = -3;      //服务器端没有该函数
    const int ERPC_SERVER_NOSERVANTERR  = -4;      //服务器端没有该Servant对象
    const int ERPC_SERVER_RESETGRID     = -5;      //服务器端灰度状态不一致
    const int ERPC_SERVER_QUEUETIMEOUT  = -6;      //服务器队列超过限制
    const int ERPC_ASYNCCALLTIMEOUT    = -7;      //异步调用超时
    const int ERPC_INVOKE_TIMEOUT       = -7;      //调用超时
    const int ERPC_PROXY_CONNECTERR     = -8;      //proxy链接异常
    const int ERPC_SERVER_OVERLOAD      = -9;      //服务器端超负载,超过队列长度
    const int ERPC_ADAPTER_NULL         = -10;     //客户端选路为空，服务不存在或者所有服务down掉了
    const int ERPC_INVOKE_BYINVALIDESET = -11;     //客户端按set规则调用非法
    const int ERPC_CLIENT_DECOD_EERR     = -12;     //客户端解码异常
    const int ERPC_SEND_REQUEST_ERR      = -13;     //发送出错
    const int ERPC_SERVE_RUN_KNOWN_ERR    = -99;     //服务器端位置异常

    /////////////////////////////////////////////////////////////////
    // 定义按位的消息状态类型,可复合

    const int ERPC_MESSAGE_TYPE_NULL     = 0x00;    //无状态
    const int ERPC_MESSAGE_TYPE_HASH     = 0x01;    //HASH消息
    const int ERPC_MESSAGE_TYPE_GRID     = 0x02;    //灰度消息
    const int ERPC_MESSAGE_TYPE_DYED     = 0x04;    //染色消息
    const int ERPC_MESSAGE_TYPE_SAMPLE   = 0x08;    //stat采样消息
    const int ERPC_MESSAGE_TYPE_ASYNC    = 0x10;    //异步调用程序
    const int ERPC_MESSAGE_TYPE_LOADED   = 0x20;    //按负载值调用程序
    const int ERPC_MESSAGE_TYPE_SETED    = 0x40;    //按set规则调用类型，此字段后面将不使用
    const int ERPC_MESSAGE_TYPE_SETNAME  = 0x80;    //按setname规则调用类型
    const int ERPC_MESSAGE_TYPE_TRACE    = 0x100;   //trace调用链消息

    /////////////////////////////////////////////////////////////////
    
    struct RequestPacket
    {
        1  require short        Version;
        2  require byte         PacketType  = 0;
        3  require int          RequestId;
        4  require int          MessageType = 0;
        5  require string       ServantName = "";
        6  require string       FuncName    = "";
        7  require vector<byte> Buffer;
        8  require int          iTimeout     = 0;
        9  require map<string, string> context;
        10 require map<string, string> status;
    };

    struct ResponsePacket
    {
        1 require short         Version;
        2 require byte          PacketType  = 0;
        3 require int           RequestId;
        4 require int           MessageType = 0;
        5 require int           iRet         = 0;
        8 optional string       sResultDesc;
        6 require vector<byte>  Buffer;
        7 require map<string, string> status;
        9 optional map<string, string> context;
    };
};
